syntax = "proto3";

package main;

option go_package = "./proto";

// 添加用户组
message AddGroupReq {
  int64 id = 1; //用户组唯一标识符，主键
  string name = 2; //用户组名称
  string code = 3; //用户组编码
  int64 parent_id = 4; //父级用户组ID
  int32 sort = 5; //排序
  int64 leader = 6; //用户组负责人ID
  int32 status = 7; //状态，0表示禁用，1表示正常启用
  int32 deleted = 8; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
  string remark = 9; //对记录的备注信息，如特殊说明等
  string create_at = 10; //记录创建的时间戳
  string create_by = 11; //创建该记录的用户标识符
}

message AddGroupResp {
  int32 code = 1;
  string message = 2;
}

// 删除用户组
message DeleteGroupReq {
  repeated int64 ids = 1;
}

message DeleteGroupResp {
  int32 code = 1;
  string message = 2;
}

// 更新用户组
message UpdateGroupReq {
  int64 id = 1; //用户组唯一标识符，主键
  string name = 2; //用户组名称
  string code = 3; //用户组编码
  int64 parent_id = 4; //父级用户组ID
  int32 sort = 5; //排序
  int64 leader = 6; //用户组负责人ID
  int32 status = 7; //状态，0表示禁用，1表示正常启用
  int32 deleted = 8; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
  string remark = 9; //对记录的备注信息，如特殊说明等
  string update_at = 12; //记录最后更新的时间戳
  string update_by = 13; //最后更新该记录的用户标识符
}

message UpdateGroupResp {
  int32 code = 1;
  string message = 2;
}

// 更新用户组状态
message UpdateGroupStatusReq {
  int32 status = 7; //状态，0表示禁用，1表示正常启用

}

message UpdateGroupStatusResp {
  int32 code = 1;
  string message = 2;
}

// 查询用户组详情
message QueryGroupDetailReq {
  int64 id = 1;
}

message QueryGroupDetailResp {
  int64 id = 1; //用户组唯一标识符，主键
  string name = 2; //用户组名称
  string code = 3; //用户组编码
  int64 parent_id = 4; //父级用户组ID
  int32 sort = 5; //排序
  int64 leader = 6; //用户组负责人ID
  int32 status = 7; //状态，0表示禁用，1表示正常启用
  int32 deleted = 8; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
  string remark = 9; //对记录的备注信息，如特殊说明等
  string create_at = 10; //记录创建的时间戳
  string create_by = 11; //创建该记录的用户标识符
  string update_at = 12; //记录最后更新的时间戳
  string update_by = 13; //最后更新该记录的用户标识符
}

// 分页查询用户组列表
message QueryPageGroupListReq {
  int64 id = 1; //用户组唯一标识符，主键
  string name = 2; //用户组名称
  string code = 3; //用户组编码
  int64 parent_id = 4; //父级用户组ID
  int64 leader = 5; //用户组负责人ID
  int32 status = 6; //状态，0表示禁用，1表示正常启用
  int32 deleted = 7; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
  int64 page_num = 8; //第几页
  int64 page_size = 9; //每页的数量
}

message PageGroupListData {
  int64 id = 1; //用户组唯一标识符，主键
  string name = 2; //用户组名称
  string code = 3; //用户组编码
  int64 parent_id = 4; //父级用户组ID
  int32 sort = 5; //排序
  int64 leader = 6; //用户组负责人ID
  int32 status = 7; //状态，0表示禁用，1表示正常启用
  int32 deleted = 8; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
  string remark = 9; //对记录的备注信息，如特殊说明等
  string create_at = 10; //记录创建的时间戳
  string create_by = 11; //创建该记录的用户标识符
  string update_at = 12; //记录最后更新的时间戳
  string update_by = 13; //最后更新该记录的用户标识符
}

message QueryPageGroupListResp {
  int64 total = 1;
  repeated  PageGroupListData list = 2;
}

// 查询用户组列表
message QueryGroupListReq {
  int64 id = 1; //用户组唯一标识符，主键
  string name = 2; //用户组名称
  string code = 3; //用户组编码
  int64 parent_id = 4; //父级用户组ID
  int64 leader = 6; //用户组负责人ID
  int32 status = 7; //状态，0表示禁用，1表示正常启用
  int32 deleted = 8; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
}

message GroupListData {
  int64 id = 1; //用户组唯一标识符，主键
  string name = 2; //用户组名称
  string code = 3; //用户组编码
  int64 parent_id = 4; //父级用户组ID
  int32 sort = 5; //排序
  int64 leader = 6; //用户组负责人ID
  int32 status = 7; //状态，0表示禁用，1表示正常启用
  int32 deleted = 8; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
  string remark = 9; //对记录的备注信息，如特殊说明等
  string create_at = 10; //记录创建的时间戳
  string create_by = 11; //创建该记录的用户标识符
  string update_at = 12; //记录最后更新的时间戳
  string update_by = 13; //最后更新该记录的用户标识符
}

message QueryGroupListResp {
  repeated  GroupListData list = 1;
}

// 用户组
service GroupService {
  // 添加用户组
  rpc AddGroup(AddGroupReq) returns (AddGroupResp){}
  // 删除用户组
  rpc DeleteGroup(DeleteGroupReq) returns (DeleteGroupResp){}
  // 更新用户组
  rpc UpdateGroup(UpdateGroupReq) returns (UpdateGroupResp){}
  // 更新用户组状态
  rpc UpdateGroupStatus(UpdateGroupStatusReq) returns (UpdateGroupStatusResp){}
  // 查询用户组详情
  rpc QueryGroupDetail(QueryGroupDetailReq) returns (QueryGroupDetailResp){}
  // 查询用户组分页列表
  rpc QueryPageGroupList(QueryPageGroupListReq) returns (QueryPageGroupListResp){}
  // 查询用户组所有列表
  rpc QueryGroupList(QueryGroupListReq) returns (QueryGroupListResp){}

}
