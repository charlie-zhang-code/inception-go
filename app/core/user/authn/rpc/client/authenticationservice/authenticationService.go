// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: main.proto

package authenticationservice

import (
	"context"

	"authn/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UsernamePasswordTokenReq  = pb.UsernamePasswordTokenReq
	UsernamePasswordTokenResp = pb.UsernamePasswordTokenResp

	AuthenticationService interface {
		// 通过用户名密码获取token
		UsernamePasswordToken(ctx context.Context, in *UsernamePasswordTokenReq, opts ...grpc.CallOption) (*UsernamePasswordTokenResp, error)
	}

	defaultAuthenticationService struct {
		cli zrpc.Client
	}
)

func NewAuthenticationService(cli zrpc.Client) AuthenticationService {
	return &defaultAuthenticationService{
		cli: cli,
	}
}

// 通过用户名密码获取token
func (m *defaultAuthenticationService) UsernamePasswordToken(ctx context.Context, in *UsernamePasswordTokenReq, opts ...grpc.CallOption) (*UsernamePasswordTokenResp, error) {
	client := pb.NewAuthenticationServiceClient(m.cli.Conn())
	return client.UsernamePasswordToken(ctx, in, opts...)
}
