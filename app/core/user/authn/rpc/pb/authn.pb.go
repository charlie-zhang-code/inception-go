// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.19.4
// source: proto/rpc/authn.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UsernamePasswordReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` //用户账户的密码，应存储加密后的值
	Client        string                 `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsernamePasswordReq) Reset() {
	*x = UsernamePasswordReq{}
	mi := &file_proto_rpc_authn_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsernamePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsernamePasswordReq) ProtoMessage() {}

func (x *UsernamePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_authn_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsernamePasswordReq.ProtoReflect.Descriptor instead.
func (*UsernamePasswordReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_authn_proto_rawDescGZIP(), []int{0}
}

func (x *UsernamePasswordReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UsernamePasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UsernamePasswordReq) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

type JwtRefreshTokenReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshToken  string                 `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` //刷新令牌
	Client        string                 `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JwtRefreshTokenReq) Reset() {
	*x = JwtRefreshTokenReq{}
	mi := &file_proto_rpc_authn_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JwtRefreshTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtRefreshTokenReq) ProtoMessage() {}

func (x *JwtRefreshTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_authn_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtRefreshTokenReq.ProtoReflect.Descriptor instead.
func (*JwtRefreshTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_authn_proto_rawDescGZIP(), []int{1}
}

func (x *JwtRefreshTokenReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *JwtRefreshTokenReq) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

type JwtTokenResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`       // 访问令牌
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`    // 刷新令牌
	RefreshAfter  string                 `protobuf:"bytes,3,opt,name=refresh_after,json=refreshAfter,proto3" json:"refresh_after,omitempty"`    // 客户端刷新访问令牌的时间点
	AccessExpire  string                 `protobuf:"bytes,4,opt,name=access_expire,json=accessExpire,proto3" json:"access_expire,omitempty"`    // 访问令牌的有效期
	RefreshExpire string                 `protobuf:"bytes,5,opt,name=refresh_expire,json=refreshExpire,proto3" json:"refresh_expire,omitempty"` // 刷新令牌的有效期
	Client        string                 `protobuf:"bytes,6,opt,name=client,proto3" json:"client,omitempty"`                                    // 客户端标识
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JwtTokenResp) Reset() {
	*x = JwtTokenResp{}
	mi := &file_proto_rpc_authn_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JwtTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtTokenResp) ProtoMessage() {}

func (x *JwtTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_authn_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtTokenResp.ProtoReflect.Descriptor instead.
func (*JwtTokenResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_authn_proto_rawDescGZIP(), []int{2}
}

func (x *JwtTokenResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *JwtTokenResp) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *JwtTokenResp) GetRefreshAfter() string {
	if x != nil {
		return x.RefreshAfter
	}
	return ""
}

func (x *JwtTokenResp) GetAccessExpire() string {
	if x != nil {
		return x.AccessExpire
	}
	return ""
}

func (x *JwtTokenResp) GetRefreshExpire() string {
	if x != nil {
		return x.RefreshExpire
	}
	return ""
}

func (x *JwtTokenResp) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

type CheckJwtTokenReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckJwtTokenReq) Reset() {
	*x = CheckJwtTokenReq{}
	mi := &file_proto_rpc_authn_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckJwtTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckJwtTokenReq) ProtoMessage() {}

func (x *CheckJwtTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_authn_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckJwtTokenReq.ProtoReflect.Descriptor instead.
func (*CheckJwtTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_authn_proto_rawDescGZIP(), []int{3}
}

func (x *CheckJwtTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CheckJwtTokenResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckJwtTokenResp) Reset() {
	*x = CheckJwtTokenResp{}
	mi := &file_proto_rpc_authn_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckJwtTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckJwtTokenResp) ProtoMessage() {}

func (x *CheckJwtTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_authn_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckJwtTokenResp.ProtoReflect.Descriptor instead.
func (*CheckJwtTokenResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_authn_proto_rawDescGZIP(), []int{4}
}

func (x *CheckJwtTokenResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type OpaqueRefreshTokenReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshToken  string                 `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Client        string                 `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpaqueRefreshTokenReq) Reset() {
	*x = OpaqueRefreshTokenReq{}
	mi := &file_proto_rpc_authn_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpaqueRefreshTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpaqueRefreshTokenReq) ProtoMessage() {}

func (x *OpaqueRefreshTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_authn_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpaqueRefreshTokenReq.ProtoReflect.Descriptor instead.
func (*OpaqueRefreshTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_authn_proto_rawDescGZIP(), []int{5}
}

func (x *OpaqueRefreshTokenReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *OpaqueRefreshTokenReq) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

type OpaqueTokenResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`       // 访问令牌
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`    // 刷新令牌
	RefreshAfter  string                 `protobuf:"bytes,3,opt,name=refresh_after,json=refreshAfter,proto3" json:"refresh_after,omitempty"`    // 客户端刷新访问令牌的时间点
	AccessExpire  string                 `protobuf:"bytes,4,opt,name=access_expire,json=accessExpire,proto3" json:"access_expire,omitempty"`    // 访问令牌的有效期
	RefreshExpire string                 `protobuf:"bytes,5,opt,name=refresh_expire,json=refreshExpire,proto3" json:"refresh_expire,omitempty"` // 刷新令牌的有效期
	Client        string                 `protobuf:"bytes,6,opt,name=client,proto3" json:"client,omitempty"`                                    // 客户端标识
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpaqueTokenResp) Reset() {
	*x = OpaqueTokenResp{}
	mi := &file_proto_rpc_authn_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpaqueTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpaqueTokenResp) ProtoMessage() {}

func (x *OpaqueTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_authn_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpaqueTokenResp.ProtoReflect.Descriptor instead.
func (*OpaqueTokenResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_authn_proto_rawDescGZIP(), []int{6}
}

func (x *OpaqueTokenResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *OpaqueTokenResp) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *OpaqueTokenResp) GetRefreshAfter() string {
	if x != nil {
		return x.RefreshAfter
	}
	return ""
}

func (x *OpaqueTokenResp) GetAccessExpire() string {
	if x != nil {
		return x.AccessExpire
	}
	return ""
}

func (x *OpaqueTokenResp) GetRefreshExpire() string {
	if x != nil {
		return x.RefreshExpire
	}
	return ""
}

func (x *OpaqueTokenResp) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

type CheckOpaqueTokenReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Client        string                 `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckOpaqueTokenReq) Reset() {
	*x = CheckOpaqueTokenReq{}
	mi := &file_proto_rpc_authn_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckOpaqueTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOpaqueTokenReq) ProtoMessage() {}

func (x *CheckOpaqueTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_authn_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOpaqueTokenReq.ProtoReflect.Descriptor instead.
func (*CheckOpaqueTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_authn_proto_rawDescGZIP(), []int{7}
}

func (x *CheckOpaqueTokenReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CheckOpaqueTokenReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *CheckOpaqueTokenReq) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

var File_proto_rpc_authn_proto protoreflect.FileDescriptor

var file_proto_rpc_authn_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x22, 0x65,
	0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x4a, 0x77, 0x74, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x0c, 0x4a, 0x77, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x10, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2d, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4a, 0x77, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x54, 0x0a, 0x15, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xe2, 0x01, 0x0a, 0x0f, 0x4f, 0x70,
	0x61, 0x71, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x75,
	0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x32, 0xed, 0x01, 0x0a, 0x08, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x50, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4a, 0x77, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x42, 0x79, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x4a, 0x77, 0x74, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x6e, 0x2e, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x42, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x32, 0x83, 0x02, 0x0a, 0x0b, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x56, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x4f, 0x70,
	0x61, 0x71, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x79, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x6e, 0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x2e, 0x4f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_rpc_authn_proto_rawDescOnce sync.Once
	file_proto_rpc_authn_proto_rawDescData = file_proto_rpc_authn_proto_rawDesc
)

func file_proto_rpc_authn_proto_rawDescGZIP() []byte {
	file_proto_rpc_authn_proto_rawDescOnce.Do(func() {
		file_proto_rpc_authn_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_rpc_authn_proto_rawDescData)
	})
	return file_proto_rpc_authn_proto_rawDescData
}

var file_proto_rpc_authn_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_rpc_authn_proto_goTypes = []any{
	(*UsernamePasswordReq)(nil),   // 0: authn.UsernamePasswordReq
	(*JwtRefreshTokenReq)(nil),    // 1: authn.JwtRefreshTokenReq
	(*JwtTokenResp)(nil),          // 2: authn.JwtTokenResp
	(*CheckJwtTokenReq)(nil),      // 3: authn.CheckJwtTokenReq
	(*CheckJwtTokenResp)(nil),     // 4: authn.CheckJwtTokenResp
	(*OpaqueRefreshTokenReq)(nil), // 5: authn.OpaqueRefreshTokenReq
	(*OpaqueTokenResp)(nil),       // 6: authn.OpaqueTokenResp
	(*CheckOpaqueTokenReq)(nil),   // 7: authn.CheckOpaqueTokenReq
}
var file_proto_rpc_authn_proto_depIdxs = []int32{
	0, // 0: authn.JwtToken.GetJwtTokenByUsernamePassword:input_type -> authn.UsernamePasswordReq
	1, // 1: authn.JwtToken.GetJwtTokenByRefreshToken:input_type -> authn.JwtRefreshTokenReq
	3, // 2: authn.JwtToken.CheckJwtToken:input_type -> authn.CheckJwtTokenReq
	0, // 3: authn.OpaqueToken.GetOpaqueTokenByUsernamePassword:input_type -> authn.UsernamePasswordReq
	5, // 4: authn.OpaqueToken.GetOpaqueTokenByRefreshToken:input_type -> authn.OpaqueRefreshTokenReq
	7, // 5: authn.OpaqueToken.CheckOpaqueToken:input_type -> authn.CheckOpaqueTokenReq
	2, // 6: authn.JwtToken.GetJwtTokenByUsernamePassword:output_type -> authn.JwtTokenResp
	2, // 7: authn.JwtToken.GetJwtTokenByRefreshToken:output_type -> authn.JwtTokenResp
	4, // 8: authn.JwtToken.CheckJwtToken:output_type -> authn.CheckJwtTokenResp
	6, // 9: authn.OpaqueToken.GetOpaqueTokenByUsernamePassword:output_type -> authn.OpaqueTokenResp
	6, // 10: authn.OpaqueToken.GetOpaqueTokenByRefreshToken:output_type -> authn.OpaqueTokenResp
	6, // 11: authn.OpaqueToken.CheckOpaqueToken:output_type -> authn.OpaqueTokenResp
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_rpc_authn_proto_init() }
func file_proto_rpc_authn_proto_init() {
	if File_proto_rpc_authn_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_rpc_authn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_rpc_authn_proto_goTypes,
		DependencyIndexes: file_proto_rpc_authn_proto_depIdxs,
		MessageInfos:      file_proto_rpc_authn_proto_msgTypes,
	}.Build()
	File_proto_rpc_authn_proto = out.File
	file_proto_rpc_authn_proto_rawDesc = nil
	file_proto_rpc_authn_proto_goTypes = nil
	file_proto_rpc_authn_proto_depIdxs = nil
}
