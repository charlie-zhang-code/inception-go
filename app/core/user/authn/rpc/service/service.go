// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: main.proto

package service

import (
	"context"

	"authn/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	RefreshTokenReq          = pb.RefreshTokenReq
	TokenResp                = pb.TokenResp
	UsernamePasswordTokenReq = pb.UsernamePasswordTokenReq

	Service interface {
		// 通过用户名密码获取token
		QueryUsernamePasswordToken(ctx context.Context, in *UsernamePasswordTokenReq, opts ...grpc.CallOption) (*TokenResp, error)
		// 刷新令牌
		QueryRefreshToken(ctx context.Context, in *RefreshTokenReq, opts ...grpc.CallOption) (*TokenResp, error)
	}

	defaultService struct {
		cli zrpc.Client
	}
)

func NewService(cli zrpc.Client) Service {
	return &defaultService{
		cli: cli,
	}
}

// 通过用户名密码获取token
func (m *defaultService) QueryUsernamePasswordToken(ctx context.Context, in *UsernamePasswordTokenReq, opts ...grpc.CallOption) (*TokenResp, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.QueryUsernamePasswordToken(ctx, in, opts...)
}

// 刷新令牌
func (m *defaultService) QueryRefreshToken(ctx context.Context, in *RefreshTokenReq, opts ...grpc.CallOption) (*TokenResp, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.QueryRefreshToken(ctx, in, opts...)
}
