// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: authn.proto

package server

import (
	"context"

	"authn/rpc/internal/logic/opaquetoken"
	"authn/rpc/internal/svc"
	"authn/rpc/pb"
)

type OpaqueTokenServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedOpaqueTokenServer
}

func NewOpaqueTokenServer(svcCtx *svc.ServiceContext) *OpaqueTokenServer {
	return &OpaqueTokenServer{
		svcCtx: svcCtx,
	}
}

// 通过用户名密码获取 opaque token
func (s *OpaqueTokenServer) GetOpaqueTokenByUsernamePassword(ctx context.Context, in *pb.UsernamePasswordReq) (*pb.OpaqueTokenResp, error) {
	l := opaquetokenlogic.NewGetOpaqueTokenByUsernamePasswordLogic(ctx, s.svcCtx)
	return l.GetOpaqueTokenByUsernamePassword(in)
}

// 通过刷新令牌获取 opaque token
func (s *OpaqueTokenServer) GetOpaqueTokenByRefreshToken(ctx context.Context, in *pb.OpaqueRefreshTokenReq) (*pb.OpaqueTokenResp, error) {
	l := opaquetokenlogic.NewGetOpaqueTokenByRefreshTokenLogic(ctx, s.svcCtx)
	return l.GetOpaqueTokenByRefreshToken(in)
}

// 校验 opaque token
func (s *OpaqueTokenServer) CheckOpaqueToken(ctx context.Context, in *pb.CheckOpaqueTokenReq) (*pb.OpaqueTokenResp, error) {
	l := opaquetokenlogic.NewCheckOpaqueTokenLogic(ctx, s.svcCtx)
	return l.CheckOpaqueToken(in)
}
