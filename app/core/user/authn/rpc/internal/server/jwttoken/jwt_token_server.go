// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: authn.proto

package server

import (
	"context"

	"authn/rpc/internal/logic/jwttoken"
	"authn/rpc/internal/svc"
	"authn/rpc/pb"
)

type JwtTokenServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedJwtTokenServer
}

func NewJwtTokenServer(svcCtx *svc.ServiceContext) *JwtTokenServer {
	return &JwtTokenServer{
		svcCtx: svcCtx,
	}
}

// 通过用户名密码获取 jwt token
func (s *JwtTokenServer) GetJwtTokenByUsernamePassword(ctx context.Context, in *pb.UsernamePasswordReq) (*pb.JwtTokenResp, error) {
	l := jwttokenlogic.NewGetJwtTokenByUsernamePasswordLogic(ctx, s.svcCtx)
	return l.GetJwtTokenByUsernamePassword(in)
}

// 通过刷新令牌获取 jwt token
func (s *JwtTokenServer) GetJwtTokenByRefreshToken(ctx context.Context, in *pb.JwtRefreshTokenReq) (*pb.JwtTokenResp, error) {
	l := jwttokenlogic.NewGetJwtTokenByRefreshTokenLogic(ctx, s.svcCtx)
	return l.GetJwtTokenByRefreshToken(in)
}

// 校验 jwt token
func (s *JwtTokenServer) CheckJwtToken(ctx context.Context, in *pb.CheckJwtTokenReq) (*pb.CheckJwtTokenResp, error) {
	l := jwttokenlogic.NewCheckJwtTokenLogic(ctx, s.svcCtx)
	return l.CheckJwtToken(in)
}
