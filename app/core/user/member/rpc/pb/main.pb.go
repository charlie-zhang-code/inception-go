// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.19.4
// source: proto/rpc/main.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加用户
type AddMemberReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`                  //用户登录时使用的用户名
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                  //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                      //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,4,opt,name=quote,proto3" json:"quote,omitempty"`                        //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,5,opt,name=birthday,proto3" json:"birthday,omitempty"`                  //用户的出生日期，用于个性化服务或统计
	Gender        int64                  `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`                     //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`                        //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,8,opt,name=telephone,proto3" json:"telephone,omitempty"`                //用户的联系电话，可用于身份验证或联系用户
	Status        int64                  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`                     //状态，0表示禁用，1表示正常启用
	Deleted       int64                  `protobuf:"varint,10,opt,name=deleted,proto3" json:"deleted,omitempty"`                  //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	CreateBy      string                 `protobuf:"bytes,12,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"` //创建该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMemberReq) Reset() {
	*x = AddMemberReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberReq) ProtoMessage() {}

func (x *AddMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberReq.ProtoReflect.Descriptor instead.
func (*AddMemberReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{0}
}

func (x *AddMemberReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddMemberReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AddMemberReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AddMemberReq) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *AddMemberReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *AddMemberReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *AddMemberReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddMemberReq) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *AddMemberReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddMemberReq) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *AddMemberReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddMemberReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

type AddMemberResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMemberResp) Reset() {
	*x = AddMemberResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberResp) ProtoMessage() {}

func (x *AddMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberResp.ProtoReflect.Descriptor instead.
func (*AddMemberResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{1}
}

func (x *AddMemberResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddMemberResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 删除用户
type DeleteMemberReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int64                `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMemberReq) Reset() {
	*x = DeleteMemberReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberReq) ProtoMessage() {}

func (x *DeleteMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberReq.ProtoReflect.Descriptor instead.
func (*DeleteMemberReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteMemberReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteMemberResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMemberResp) Reset() {
	*x = DeleteMemberResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemberResp) ProtoMessage() {}

func (x *DeleteMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemberResp.ProtoReflect.Descriptor instead.
func (*DeleteMemberResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteMemberResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteMemberResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 更新用户
type UpdateMemberReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                  //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                  //用户登录时使用的用户名
	Nickname      string                 `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`                  //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`                      //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,6,opt,name=quote,proto3" json:"quote,omitempty"`                        //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,7,opt,name=birthday,proto3" json:"birthday,omitempty"`                  //用户的出生日期，用于个性化服务或统计
	Gender        int64                  `protobuf:"varint,8,opt,name=gender,proto3" json:"gender,omitempty"`                     //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`                        //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,10,opt,name=telephone,proto3" json:"telephone,omitempty"`               //用户的联系电话，可用于身份验证或联系用户
	Status        int64                  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`                    //状态，0表示禁用，1表示正常启用
	Deleted       int64                  `protobuf:"varint,12,opt,name=deleted,proto3" json:"deleted,omitempty"`                  //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	UpdateBy      string                 `protobuf:"bytes,14,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMemberReq) Reset() {
	*x = UpdateMemberReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberReq) ProtoMessage() {}

func (x *UpdateMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateMemberReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMemberReq) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *UpdateMemberReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateMemberReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateMemberReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdateMemberReq) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *UpdateMemberReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UpdateMemberReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UpdateMemberReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateMemberReq) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *UpdateMemberReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMemberReq) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *UpdateMemberReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateMemberReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateMemberResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMemberResp) Reset() {
	*x = UpdateMemberResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberResp) ProtoMessage() {}

func (x *UpdateMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateMemberResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateMemberResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 更新用户状态
type UpdateMemberStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"` //状态，0表示禁用，1表示正常启用
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMemberStatusReq) Reset() {
	*x = UpdateMemberStatusReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMemberStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberStatusReq) ProtoMessage() {}

func (x *UpdateMemberStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMemberStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMemberStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateMemberStatusResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMemberStatusResp) Reset() {
	*x = UpdateMemberStatusResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMemberStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberStatusResp) ProtoMessage() {}

func (x *UpdateMemberStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateMemberStatusResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateMemberStatusResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateMemberStatusResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 查询用户详情
type QueryMemberDetailReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMemberDetailReq) Reset() {
	*x = QueryMemberDetailReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMemberDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberDetailReq) ProtoMessage() {}

func (x *QueryMemberDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMemberDetailReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{8}
}

func (x *QueryMemberDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMemberDetailResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                  //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                  //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                  //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                  //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                      //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                        //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                  //用户的出生日期，用于个性化服务或统计
	Gender        int64                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                     //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                       //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`               //用户的联系电话，可用于身份验证或联系用户
	Status        int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                    //状态，0表示禁用，1表示正常启用
	Deleted       int64                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                  //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	CreateAt      string                 `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` //记录创建的时间戳
	CreateBy      string                 `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"` //创建该记录的用户标识符
	UpdateAt      string                 `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"` //记录最后更新的时间戳
	UpdateBy      string                 `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMemberDetailResp) Reset() {
	*x = QueryMemberDetailResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMemberDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberDetailResp) ProtoMessage() {}

func (x *QueryMemberDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMemberDetailResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{9}
}

func (x *QueryMemberDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMemberDetailResp) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *QueryMemberDetailResp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QueryMemberDetailResp) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *QueryMemberDetailResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QueryMemberDetailResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QueryMemberDetailResp) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *QueryMemberDetailResp) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *QueryMemberDetailResp) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *QueryMemberDetailResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QueryMemberDetailResp) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *QueryMemberDetailResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMemberDetailResp) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *QueryMemberDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryMemberDetailResp) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *QueryMemberDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryMemberDetailResp) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *QueryMemberDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

// 分页查询用户列表
type QueryPageMemberListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNum       int64                  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize      int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPageMemberListReq) Reset() {
	*x = QueryPageMemberListReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPageMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPageMemberListReq) ProtoMessage() {}

func (x *QueryPageMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPageMemberListReq.ProtoReflect.Descriptor instead.
func (*QueryPageMemberListReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{10}
}

func (x *QueryPageMemberListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryPageMemberListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PageMemberListData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                  //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                  //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                  //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                  //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                      //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                        //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                  //用户的出生日期，用于个性化服务或统计
	Gender        int64                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                     //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                       //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`               //用户的联系电话，可用于身份验证或联系用户
	Status        int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                    //状态，0表示禁用，1表示正常启用
	Deleted       int64                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                  //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	CreateAt      string                 `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` //记录创建的时间戳
	CreateBy      string                 `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"` //创建该记录的用户标识符
	UpdateAt      string                 `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"` //记录最后更新的时间戳
	UpdateBy      string                 `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageMemberListData) Reset() {
	*x = PageMemberListData{}
	mi := &file_proto_rpc_main_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageMemberListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageMemberListData) ProtoMessage() {}

func (x *PageMemberListData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageMemberListData.ProtoReflect.Descriptor instead.
func (*PageMemberListData) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{11}
}

func (x *PageMemberListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PageMemberListData) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *PageMemberListData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PageMemberListData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PageMemberListData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PageMemberListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PageMemberListData) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *PageMemberListData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *PageMemberListData) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *PageMemberListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PageMemberListData) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *PageMemberListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PageMemberListData) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *PageMemberListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PageMemberListData) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *PageMemberListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PageMemberListData) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *PageMemberListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type QueryPageMemberListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List          []*PageMemberListData  `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPageMemberListResp) Reset() {
	*x = QueryPageMemberListResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPageMemberListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPageMemberListResp) ProtoMessage() {}

func (x *QueryPageMemberListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPageMemberListResp.ProtoReflect.Descriptor instead.
func (*QueryPageMemberListResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{12}
}

func (x *QueryPageMemberListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryPageMemberListResp) GetList() []*PageMemberListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询关键字用户分页列表
type QueryKeywordPageMemberListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNum       int64                  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize      int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	Keyword       string                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryKeywordPageMemberListReq) Reset() {
	*x = QueryKeywordPageMemberListReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryKeywordPageMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeywordPageMemberListReq) ProtoMessage() {}

func (x *QueryKeywordPageMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeywordPageMemberListReq.ProtoReflect.Descriptor instead.
func (*QueryKeywordPageMemberListReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{13}
}

func (x *QueryKeywordPageMemberListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryKeywordPageMemberListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryKeywordPageMemberListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type KeywordPageMemberListData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                  //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                  //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                  //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                  //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                      //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                        //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                  //用户的出生日期，用于个性化服务或统计
	Gender        int64                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                     //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                       //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`               //用户的联系电话，可用于身份验证或联系用户
	Status        int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                    //状态，0表示禁用，1表示正常启用
	Deleted       int64                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                  //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	CreateAt      string                 `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` //记录创建的时间戳
	CreateBy      string                 `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"` //创建该记录的用户标识符
	UpdateAt      string                 `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"` //记录最后更新的时间戳
	UpdateBy      string                 `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeywordPageMemberListData) Reset() {
	*x = KeywordPageMemberListData{}
	mi := &file_proto_rpc_main_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeywordPageMemberListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordPageMemberListData) ProtoMessage() {}

func (x *KeywordPageMemberListData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordPageMemberListData.ProtoReflect.Descriptor instead.
func (*KeywordPageMemberListData) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{14}
}

func (x *KeywordPageMemberListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KeywordPageMemberListData) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *KeywordPageMemberListData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *KeywordPageMemberListData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *KeywordPageMemberListData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *KeywordPageMemberListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *KeywordPageMemberListData) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *KeywordPageMemberListData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *KeywordPageMemberListData) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *KeywordPageMemberListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *KeywordPageMemberListData) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *KeywordPageMemberListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *KeywordPageMemberListData) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *KeywordPageMemberListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *KeywordPageMemberListData) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *KeywordPageMemberListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *KeywordPageMemberListData) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *KeywordPageMemberListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type QueryKeywordPageMemberListResp struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Total         int64                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List          []*KeywordPageMemberListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryKeywordPageMemberListResp) Reset() {
	*x = QueryKeywordPageMemberListResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryKeywordPageMemberListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeywordPageMemberListResp) ProtoMessage() {}

func (x *QueryKeywordPageMemberListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeywordPageMemberListResp.ProtoReflect.Descriptor instead.
func (*QueryKeywordPageMemberListResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{15}
}

func (x *QueryKeywordPageMemberListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryKeywordPageMemberListResp) GetList() []*KeywordPageMemberListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询用户列表
type QueryMemberListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMemberListReq) Reset() {
	*x = QueryMemberListReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberListReq) ProtoMessage() {}

func (x *QueryMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberListReq.ProtoReflect.Descriptor instead.
func (*QueryMemberListReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{16}
}

type MemberListData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                  //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                  //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                  //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                  //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                      //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                        //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                  //用户的出生日期，用于个性化服务或统计
	Gender        int64                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                     //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                       //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`               //用户的联系电话，可用于身份验证或联系用户
	Status        int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                    //状态，0表示禁用，1表示正常启用
	Deleted       int64                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                  //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	CreateAt      string                 `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` //记录创建的时间戳
	CreateBy      string                 `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"` //创建该记录的用户标识符
	UpdateAt      string                 `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"` //记录最后更新的时间戳
	UpdateBy      string                 `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemberListData) Reset() {
	*x = MemberListData{}
	mi := &file_proto_rpc_main_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberListData) ProtoMessage() {}

func (x *MemberListData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberListData.ProtoReflect.Descriptor instead.
func (*MemberListData) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{17}
}

func (x *MemberListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberListData) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *MemberListData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MemberListData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *MemberListData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MemberListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *MemberListData) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *MemberListData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *MemberListData) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *MemberListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *MemberListData) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *MemberListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MemberListData) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *MemberListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MemberListData) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *MemberListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MemberListData) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *MemberListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type QueryMemberListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*MemberListData      `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMemberListResp) Reset() {
	*x = QueryMemberListResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMemberListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMemberListResp) ProtoMessage() {}

func (x *QueryMemberListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMemberListResp.ProtoReflect.Descriptor instead.
func (*QueryMemberListResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{18}
}

func (x *QueryMemberListResp) GetList() []*MemberListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询关键字用户列表
type QueryKeywordMemberListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryKeywordMemberListReq) Reset() {
	*x = QueryKeywordMemberListReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryKeywordMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeywordMemberListReq) ProtoMessage() {}

func (x *QueryKeywordMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeywordMemberListReq.ProtoReflect.Descriptor instead.
func (*QueryKeywordMemberListReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{19}
}

func (x *QueryKeywordMemberListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type KeywordMemberListData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                  //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                  //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                  //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                  //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                      //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                        //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                  //用户的出生日期，用于个性化服务或统计
	Gender        int64                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                     //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                       //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`               //用户的联系电话，可用于身份验证或联系用户
	Status        int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                    //状态，0表示禁用，1表示正常启用
	Deleted       int64                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                  //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	CreateAt      string                 `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` //记录创建的时间戳
	CreateBy      string                 `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"` //创建该记录的用户标识符
	UpdateAt      string                 `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"` //记录最后更新的时间戳
	UpdateBy      string                 `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeywordMemberListData) Reset() {
	*x = KeywordMemberListData{}
	mi := &file_proto_rpc_main_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeywordMemberListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordMemberListData) ProtoMessage() {}

func (x *KeywordMemberListData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordMemberListData.ProtoReflect.Descriptor instead.
func (*KeywordMemberListData) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{20}
}

func (x *KeywordMemberListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KeywordMemberListData) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *KeywordMemberListData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *KeywordMemberListData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *KeywordMemberListData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *KeywordMemberListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *KeywordMemberListData) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *KeywordMemberListData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *KeywordMemberListData) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *KeywordMemberListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *KeywordMemberListData) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *KeywordMemberListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *KeywordMemberListData) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *KeywordMemberListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *KeywordMemberListData) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *KeywordMemberListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *KeywordMemberListData) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *KeywordMemberListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type QueryKeywordMemberListResp struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	List          []*KeywordMemberListData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryKeywordMemberListResp) Reset() {
	*x = QueryKeywordMemberListResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryKeywordMemberListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeywordMemberListResp) ProtoMessage() {}

func (x *QueryKeywordMemberListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeywordMemberListResp.ProtoReflect.Descriptor instead.
func (*QueryKeywordMemberListResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{21}
}

func (x *QueryKeywordMemberListResp) GetList() []*KeywordMemberListData {
	if x != nil {
		return x.List
	}
	return nil
}

var File_proto_rpc_main_proto protoreflect.FileDescriptor

var file_proto_rpc_main_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xc3, 0x02, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x22, 0x3d, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x23, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x40, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf2, 0x02, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x40, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x2f, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x46, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xeb, 0x03, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x50,
	0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0xe8, 0x03, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x5d, 0x0a, 0x17, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x71, 0x0a, 0x1d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xef, 0x03,
	0x0a, 0x19, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22,
	0x6b, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x50,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x22, 0xe4, 0x03, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x3f, 0x0a, 0x13, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x19, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0xeb, 0x03, 0x0a, 0x15, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22,
	0x4d, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xd0,
	0x05, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x69, 0x0a,
	0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x50,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x5d, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_rpc_main_proto_rawDescOnce sync.Once
	file_proto_rpc_main_proto_rawDescData = file_proto_rpc_main_proto_rawDesc
)

func file_proto_rpc_main_proto_rawDescGZIP() []byte {
	file_proto_rpc_main_proto_rawDescOnce.Do(func() {
		file_proto_rpc_main_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_rpc_main_proto_rawDescData)
	})
	return file_proto_rpc_main_proto_rawDescData
}

var file_proto_rpc_main_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_proto_rpc_main_proto_goTypes = []any{
	(*AddMemberReq)(nil),                   // 0: main.AddMemberReq
	(*AddMemberResp)(nil),                  // 1: main.AddMemberResp
	(*DeleteMemberReq)(nil),                // 2: main.DeleteMemberReq
	(*DeleteMemberResp)(nil),               // 3: main.DeleteMemberResp
	(*UpdateMemberReq)(nil),                // 4: main.UpdateMemberReq
	(*UpdateMemberResp)(nil),               // 5: main.UpdateMemberResp
	(*UpdateMemberStatusReq)(nil),          // 6: main.UpdateMemberStatusReq
	(*UpdateMemberStatusResp)(nil),         // 7: main.UpdateMemberStatusResp
	(*QueryMemberDetailReq)(nil),           // 8: main.QueryMemberDetailReq
	(*QueryMemberDetailResp)(nil),          // 9: main.QueryMemberDetailResp
	(*QueryPageMemberListReq)(nil),         // 10: main.QueryPageMemberListReq
	(*PageMemberListData)(nil),             // 11: main.PageMemberListData
	(*QueryPageMemberListResp)(nil),        // 12: main.QueryPageMemberListResp
	(*QueryKeywordPageMemberListReq)(nil),  // 13: main.QueryKeywordPageMemberListReq
	(*KeywordPageMemberListData)(nil),      // 14: main.KeywordPageMemberListData
	(*QueryKeywordPageMemberListResp)(nil), // 15: main.QueryKeywordPageMemberListResp
	(*QueryMemberListReq)(nil),             // 16: main.QueryMemberListReq
	(*MemberListData)(nil),                 // 17: main.MemberListData
	(*QueryMemberListResp)(nil),            // 18: main.QueryMemberListResp
	(*QueryKeywordMemberListReq)(nil),      // 19: main.QueryKeywordMemberListReq
	(*KeywordMemberListData)(nil),          // 20: main.KeywordMemberListData
	(*QueryKeywordMemberListResp)(nil),     // 21: main.QueryKeywordMemberListResp
}
var file_proto_rpc_main_proto_depIdxs = []int32{
	11, // 0: main.QueryPageMemberListResp.list:type_name -> main.PageMemberListData
	14, // 1: main.QueryKeywordPageMemberListResp.list:type_name -> main.KeywordPageMemberListData
	17, // 2: main.QueryMemberListResp.list:type_name -> main.MemberListData
	20, // 3: main.QueryKeywordMemberListResp.list:type_name -> main.KeywordMemberListData
	0,  // 4: main.Service.AddMember:input_type -> main.AddMemberReq
	2,  // 5: main.Service.DeleteMember:input_type -> main.DeleteMemberReq
	4,  // 6: main.Service.UpdateMember:input_type -> main.UpdateMemberReq
	6,  // 7: main.Service.UpdateMemberStatus:input_type -> main.UpdateMemberStatusReq
	8,  // 8: main.Service.QueryMemberDetail:input_type -> main.QueryMemberDetailReq
	10, // 9: main.Service.QueryPageMemberList:input_type -> main.QueryPageMemberListReq
	13, // 10: main.Service.QueryKeywordPageMemberList:input_type -> main.QueryKeywordPageMemberListReq
	16, // 11: main.Service.QueryMemberList:input_type -> main.QueryMemberListReq
	19, // 12: main.Service.QueryKeywordMemberList:input_type -> main.QueryKeywordMemberListReq
	1,  // 13: main.Service.AddMember:output_type -> main.AddMemberResp
	3,  // 14: main.Service.DeleteMember:output_type -> main.DeleteMemberResp
	5,  // 15: main.Service.UpdateMember:output_type -> main.UpdateMemberResp
	7,  // 16: main.Service.UpdateMemberStatus:output_type -> main.UpdateMemberStatusResp
	9,  // 17: main.Service.QueryMemberDetail:output_type -> main.QueryMemberDetailResp
	12, // 18: main.Service.QueryPageMemberList:output_type -> main.QueryPageMemberListResp
	15, // 19: main.Service.QueryKeywordPageMemberList:output_type -> main.QueryKeywordPageMemberListResp
	18, // 20: main.Service.QueryMemberList:output_type -> main.QueryMemberListResp
	21, // 21: main.Service.QueryKeywordMemberList:output_type -> main.QueryKeywordMemberListResp
	13, // [13:22] is the sub-list for method output_type
	4,  // [4:13] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_rpc_main_proto_init() }
func file_proto_rpc_main_proto_init() {
	if File_proto_rpc_main_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_rpc_main_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_rpc_main_proto_goTypes,
		DependencyIndexes: file_proto_rpc_main_proto_depIdxs,
		MessageInfos:      file_proto_rpc_main_proto_msgTypes,
	}.Build()
	File_proto_rpc_main_proto = out.File
	file_proto_rpc_main_proto_rawDesc = nil
	file_proto_rpc_main_proto_goTypes = nil
	file_proto_rpc_main_proto_depIdxs = nil
}
