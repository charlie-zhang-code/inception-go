// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.19.4
// source: proto/rpc/main.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加用户
type AddSysUserReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender        int32                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt       string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp       string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion   string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs       string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status        int32                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	Deleted       int32                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                           //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                              //对记录的备注信息，如特殊说明等
	CreateAt      string                 `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`          //记录创建的时间戳
	CreateBy      string                 `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`          //创建该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSysUserReq) Reset() {
	*x = AddSysUserReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSysUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysUserReq) ProtoMessage() {}

func (x *AddSysUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysUserReq.ProtoReflect.Descriptor instead.
func (*AddSysUserReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{0}
}

func (x *AddSysUserReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddSysUserReq) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *AddSysUserReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddSysUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddSysUserReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AddSysUserReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AddSysUserReq) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *AddSysUserReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *AddSysUserReq) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *AddSysUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddSysUserReq) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *AddSysUserReq) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *AddSysUserReq) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *AddSysUserReq) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *AddSysUserReq) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *AddSysUserReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddSysUserReq) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *AddSysUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddSysUserReq) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *AddSysUserReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

type AddSysUserResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSysUserResp) Reset() {
	*x = AddSysUserResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSysUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysUserResp) ProtoMessage() {}

func (x *AddSysUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysUserResp.ProtoReflect.Descriptor instead.
func (*AddSysUserResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{1}
}

func (x *AddSysUserResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddSysUserResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 删除用户
type DeleteSysUserReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int64                `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSysUserReq) Reset() {
	*x = DeleteSysUserReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSysUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysUserReq) ProtoMessage() {}

func (x *DeleteSysUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysUserReq.ProtoReflect.Descriptor instead.
func (*DeleteSysUserReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteSysUserReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteSysUserResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSysUserResp) Reset() {
	*x = DeleteSysUserResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSysUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysUserResp) ProtoMessage() {}

func (x *DeleteSysUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysUserResp.ProtoReflect.Descriptor instead.
func (*DeleteSysUserResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteSysUserResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteSysUserResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 更新用户
type UpdateSysUserReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender        int32                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt       string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp       string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion   string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs       string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status        int32                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	Deleted       int32                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                           //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                              //对记录的备注信息，如特殊说明等
	UpdateAt      string                 `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`          //记录最后更新的时间戳
	UpdateBy      string                 `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`          //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSysUserReq) Reset() {
	*x = UpdateSysUserReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSysUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysUserReq) ProtoMessage() {}

func (x *UpdateSysUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysUserReq.ProtoReflect.Descriptor instead.
func (*UpdateSysUserReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSysUserReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysUserReq) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *UpdateSysUserReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateSysUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateSysUserReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateSysUserReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdateSysUserReq) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *UpdateSysUserReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UpdateSysUserReq) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UpdateSysUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateSysUserReq) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *UpdateSysUserReq) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *UpdateSysUserReq) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *UpdateSysUserReq) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *UpdateSysUserReq) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *UpdateSysUserReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateSysUserReq) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *UpdateSysUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateSysUserReq) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *UpdateSysUserReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateSysUserResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSysUserResp) Reset() {
	*x = UpdateSysUserResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSysUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysUserResp) ProtoMessage() {}

func (x *UpdateSysUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysUserResp.ProtoReflect.Descriptor instead.
func (*UpdateSysUserResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSysUserResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateSysUserResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 更新用户状态
type UpdateSysUserStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"` //状态，0表示禁用，1表示正常启用
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSysUserStatusReq) Reset() {
	*x = UpdateSysUserStatusReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSysUserStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysUserStatusReq) ProtoMessage() {}

func (x *UpdateSysUserStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysUserStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateSysUserStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSysUserStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateSysUserStatusResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSysUserStatusResp) Reset() {
	*x = UpdateSysUserStatusResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSysUserStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysUserStatusResp) ProtoMessage() {}

func (x *UpdateSysUserStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysUserStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateSysUserStatusResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSysUserStatusResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateSysUserStatusResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 查询用户详情
type QuerySysUserDetailReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySysUserDetailReq) Reset() {
	*x = QuerySysUserDetailReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySysUserDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySysUserDetailReq) ProtoMessage() {}

func (x *QuerySysUserDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySysUserDetailReq.ProtoReflect.Descriptor instead.
func (*QuerySysUserDetailReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{8}
}

func (x *QuerySysUserDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QuerySysUserDetailResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender        int32                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt       string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp       string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion   string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs       string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status        int32                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	Deleted       int32                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                           //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                              //对记录的备注信息，如特殊说明等
	CreateAt      string                 `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`          //记录创建的时间戳
	CreateBy      string                 `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`          //创建该记录的用户标识符
	UpdateAt      string                 `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`          //记录最后更新的时间戳
	UpdateBy      string                 `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`          //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySysUserDetailResp) Reset() {
	*x = QuerySysUserDetailResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySysUserDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySysUserDetailResp) ProtoMessage() {}

func (x *QuerySysUserDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySysUserDetailResp.ProtoReflect.Descriptor instead.
func (*QuerySysUserDetailResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{9}
}

func (x *QuerySysUserDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuerySysUserDetailResp) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *QuerySysUserDetailResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QuerySysUserDetailResp) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *QuerySysUserDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *QuerySysUserDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

// 分页查询用户列表
type QueryPageSysUserListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender        int32                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt       string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp       string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion   string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs       string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status        int32                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	Deleted       int32                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                           //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	PageNum       int64                  `protobuf:"varint,18,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`            //第几页
	PageSize      int64                  `protobuf:"varint,19,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`         //每页的数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPageSysUserListReq) Reset() {
	*x = QueryPageSysUserListReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPageSysUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPageSysUserListReq) ProtoMessage() {}

func (x *QueryPageSysUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPageSysUserListReq.ProtoReflect.Descriptor instead.
func (*QueryPageSysUserListReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{10}
}

func (x *QueryPageSysUserListReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryPageSysUserListReq) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *QueryPageSysUserListReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *QueryPageSysUserListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryPageSysUserListReq) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *QueryPageSysUserListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryPageSysUserListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PageSysUserListData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender        int32                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt       string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp       string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion   string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs       string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status        int32                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	Deleted       int32                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                           //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                              //对记录的备注信息，如特殊说明等
	CreateAt      string                 `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`          //记录创建的时间戳
	CreateBy      string                 `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`          //创建该记录的用户标识符
	UpdateAt      string                 `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`          //记录最后更新的时间戳
	UpdateBy      string                 `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`          //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageSysUserListData) Reset() {
	*x = PageSysUserListData{}
	mi := &file_proto_rpc_main_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageSysUserListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSysUserListData) ProtoMessage() {}

func (x *PageSysUserListData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSysUserListData.ProtoReflect.Descriptor instead.
func (*PageSysUserListData) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{11}
}

func (x *PageSysUserListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PageSysUserListData) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *PageSysUserListData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PageSysUserListData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PageSysUserListData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PageSysUserListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PageSysUserListData) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *PageSysUserListData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *PageSysUserListData) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *PageSysUserListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PageSysUserListData) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *PageSysUserListData) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *PageSysUserListData) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *PageSysUserListData) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *PageSysUserListData) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *PageSysUserListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PageSysUserListData) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *PageSysUserListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PageSysUserListData) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *PageSysUserListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PageSysUserListData) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *PageSysUserListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type QueryPageSysUserListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List          []*PageSysUserListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPageSysUserListResp) Reset() {
	*x = QueryPageSysUserListResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPageSysUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPageSysUserListResp) ProtoMessage() {}

func (x *QueryPageSysUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPageSysUserListResp.ProtoReflect.Descriptor instead.
func (*QueryPageSysUserListResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{12}
}

func (x *QueryPageSysUserListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryPageSysUserListResp) GetList() []*PageSysUserListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询用户列表
type QuerySysUserListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender        int32                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt       string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp       string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion   string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs       string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status        int32                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	Deleted       int32                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                           //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySysUserListReq) Reset() {
	*x = QuerySysUserListReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySysUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySysUserListReq) ProtoMessage() {}

func (x *QuerySysUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySysUserListReq.ProtoReflect.Descriptor instead.
func (*QuerySysUserListReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{13}
}

func (x *QuerySysUserListReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuerySysUserListReq) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *QuerySysUserListReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QuerySysUserListReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *QuerySysUserListReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QuerySysUserListReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QuerySysUserListReq) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *QuerySysUserListReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *QuerySysUserListReq) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *QuerySysUserListReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QuerySysUserListReq) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *QuerySysUserListReq) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *QuerySysUserListReq) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *QuerySysUserListReq) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *QuerySysUserListReq) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *QuerySysUserListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QuerySysUserListReq) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

type SysUserListData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender        int32                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt       string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp       string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion   string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs       string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status        int32                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	Deleted       int32                  `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`                           //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string                 `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                              //对记录的备注信息，如特殊说明等
	CreateAt      string                 `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`          //记录创建的时间戳
	CreateBy      string                 `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`          //创建该记录的用户标识符
	UpdateAt      string                 `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`          //记录最后更新的时间戳
	UpdateBy      string                 `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`          //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SysUserListData) Reset() {
	*x = SysUserListData{}
	mi := &file_proto_rpc_main_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SysUserListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserListData) ProtoMessage() {}

func (x *SysUserListData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserListData.ProtoReflect.Descriptor instead.
func (*SysUserListData) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{14}
}

func (x *SysUserListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysUserListData) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *SysUserListData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysUserListData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SysUserListData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SysUserListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysUserListData) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *SysUserListData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *SysUserListData) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SysUserListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysUserListData) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *SysUserListData) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *SysUserListData) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *SysUserListData) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *SysUserListData) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *SysUserListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysUserListData) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *SysUserListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysUserListData) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *SysUserListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *SysUserListData) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *SysUserListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type QuerySysUserListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*SysUserListData     `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySysUserListResp) Reset() {
	*x = QuerySysUserListResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySysUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySysUserListResp) ProtoMessage() {}

func (x *QuerySysUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySysUserListResp.ProtoReflect.Descriptor instead.
func (*QuerySysUserListResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{15}
}

func (x *QuerySysUserListResp) GetList() []*SysUserListData {
	if x != nil {
		return x.List
	}
	return nil
}

var File_proto_rpc_main_proto protoreflect.FileDescriptor

var file_proto_rpc_main_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x72, 0x70, 0x63, 0x22, 0x9d, 0x04, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x4f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x3e, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x24, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x41, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xa0, 0x04, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x22, 0x41, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x47, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x27, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe0, 0x04, 0x0a, 0x16, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x8d, 0x04,
	0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x4f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xdd, 0x04,
	0x0a, 0x13, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x6a, 0x0a,
	0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd1, 0x03, 0x0a, 0x13, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xd9, 0x04,
	0x0a, 0x0f, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x4c, 0x0a, 0x14, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xb5, 0x05, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6d, 0x0a,
	0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42,
	0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_rpc_main_proto_rawDescOnce sync.Once
	file_proto_rpc_main_proto_rawDescData = file_proto_rpc_main_proto_rawDesc
)

func file_proto_rpc_main_proto_rawDescGZIP() []byte {
	file_proto_rpc_main_proto_rawDescOnce.Do(func() {
		file_proto_rpc_main_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_rpc_main_proto_rawDescData)
	})
	return file_proto_rpc_main_proto_rawDescData
}

var file_proto_rpc_main_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_rpc_main_proto_goTypes = []any{
	(*AddSysUserReq)(nil),            // 0: user.member.rpc.AddSysUserReq
	(*AddSysUserResp)(nil),           // 1: user.member.rpc.AddSysUserResp
	(*DeleteSysUserReq)(nil),         // 2: user.member.rpc.DeleteSysUserReq
	(*DeleteSysUserResp)(nil),        // 3: user.member.rpc.DeleteSysUserResp
	(*UpdateSysUserReq)(nil),         // 4: user.member.rpc.UpdateSysUserReq
	(*UpdateSysUserResp)(nil),        // 5: user.member.rpc.UpdateSysUserResp
	(*UpdateSysUserStatusReq)(nil),   // 6: user.member.rpc.UpdateSysUserStatusReq
	(*UpdateSysUserStatusResp)(nil),  // 7: user.member.rpc.UpdateSysUserStatusResp
	(*QuerySysUserDetailReq)(nil),    // 8: user.member.rpc.QuerySysUserDetailReq
	(*QuerySysUserDetailResp)(nil),   // 9: user.member.rpc.QuerySysUserDetailResp
	(*QueryPageSysUserListReq)(nil),  // 10: user.member.rpc.QueryPageSysUserListReq
	(*PageSysUserListData)(nil),      // 11: user.member.rpc.PageSysUserListData
	(*QueryPageSysUserListResp)(nil), // 12: user.member.rpc.QueryPageSysUserListResp
	(*QuerySysUserListReq)(nil),      // 13: user.member.rpc.QuerySysUserListReq
	(*SysUserListData)(nil),          // 14: user.member.rpc.SysUserListData
	(*QuerySysUserListResp)(nil),     // 15: user.member.rpc.QuerySysUserListResp
}
var file_proto_rpc_main_proto_depIdxs = []int32{
	11, // 0: user.member.rpc.QueryPageSysUserListResp.list:type_name -> user.member.rpc.PageSysUserListData
	14, // 1: user.member.rpc.QuerySysUserListResp.list:type_name -> user.member.rpc.SysUserListData
	0,  // 2: user.member.rpc.Service.AddSysUser:input_type -> user.member.rpc.AddSysUserReq
	2,  // 3: user.member.rpc.Service.DeleteSysUser:input_type -> user.member.rpc.DeleteSysUserReq
	4,  // 4: user.member.rpc.Service.UpdateSysUser:input_type -> user.member.rpc.UpdateSysUserReq
	6,  // 5: user.member.rpc.Service.UpdateSysUserStatus:input_type -> user.member.rpc.UpdateSysUserStatusReq
	8,  // 6: user.member.rpc.Service.QuerySysUserDetail:input_type -> user.member.rpc.QuerySysUserDetailReq
	10, // 7: user.member.rpc.Service.QueryPageSysUserList:input_type -> user.member.rpc.QueryPageSysUserListReq
	13, // 8: user.member.rpc.Service.QuerySysUserList:input_type -> user.member.rpc.QuerySysUserListReq
	1,  // 9: user.member.rpc.Service.AddSysUser:output_type -> user.member.rpc.AddSysUserResp
	3,  // 10: user.member.rpc.Service.DeleteSysUser:output_type -> user.member.rpc.DeleteSysUserResp
	5,  // 11: user.member.rpc.Service.UpdateSysUser:output_type -> user.member.rpc.UpdateSysUserResp
	7,  // 12: user.member.rpc.Service.UpdateSysUserStatus:output_type -> user.member.rpc.UpdateSysUserStatusResp
	9,  // 13: user.member.rpc.Service.QuerySysUserDetail:output_type -> user.member.rpc.QuerySysUserDetailResp
	12, // 14: user.member.rpc.Service.QueryPageSysUserList:output_type -> user.member.rpc.QueryPageSysUserListResp
	15, // 15: user.member.rpc.Service.QuerySysUserList:output_type -> user.member.rpc.QuerySysUserListResp
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_proto_rpc_main_proto_init() }
func file_proto_rpc_main_proto_init() {
	if File_proto_rpc_main_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_rpc_main_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_rpc_main_proto_goTypes,
		DependencyIndexes: file_proto_rpc_main_proto_depIdxs,
		MessageInfos:      file_proto_rpc_main_proto_msgTypes,
	}.Build()
	File_proto_rpc_main_proto = out.File
	file_proto_rpc_main_proto_rawDesc = nil
	file_proto_rpc_main_proto_goTypes = nil
	file_proto_rpc_main_proto_depIdxs = nil
}
