// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: main.proto

package service

import (
	"context"

	"member/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddMemberReq                   = pb.AddMemberReq
	AddMemberResp                  = pb.AddMemberResp
	DeleteMemberReq                = pb.DeleteMemberReq
	DeleteMemberResp               = pb.DeleteMemberResp
	KeywordMemberListData          = pb.KeywordMemberListData
	KeywordPageMemberListData      = pb.KeywordPageMemberListData
	MemberListData                 = pb.MemberListData
	PageMemberListData             = pb.PageMemberListData
	QueryKeywordMemberListReq      = pb.QueryKeywordMemberListReq
	QueryKeywordMemberListResp     = pb.QueryKeywordMemberListResp
	QueryKeywordPageMemberListReq  = pb.QueryKeywordPageMemberListReq
	QueryKeywordPageMemberListResp = pb.QueryKeywordPageMemberListResp
	QueryMemberDetailReq           = pb.QueryMemberDetailReq
	QueryMemberDetailResp          = pb.QueryMemberDetailResp
	QueryMemberListReq             = pb.QueryMemberListReq
	QueryMemberListResp            = pb.QueryMemberListResp
	QueryPageMemberListReq         = pb.QueryPageMemberListReq
	QueryPageMemberListResp        = pb.QueryPageMemberListResp
	UpdateMemberReq                = pb.UpdateMemberReq
	UpdateMemberResp               = pb.UpdateMemberResp
	UpdateMemberStatusReq          = pb.UpdateMemberStatusReq
	UpdateMemberStatusResp         = pb.UpdateMemberStatusResp

	Service interface {
		// 添加用户
		AddMember(ctx context.Context, in *AddMemberReq, opts ...grpc.CallOption) (*AddMemberResp, error)
		// 删除用户
		DeleteMember(ctx context.Context, in *DeleteMemberReq, opts ...grpc.CallOption) (*DeleteMemberResp, error)
		// 更新用户
		UpdateMember(ctx context.Context, in *UpdateMemberReq, opts ...grpc.CallOption) (*UpdateMemberResp, error)
		// 更新用户状态
		UpdateMemberStatus(ctx context.Context, in *UpdateMemberStatusReq, opts ...grpc.CallOption) (*UpdateMemberStatusResp, error)
		// 查询用户详情
		QueryMemberDetail(ctx context.Context, in *QueryMemberDetailReq, opts ...grpc.CallOption) (*QueryMemberDetailResp, error)
		// 查询用户分页列表
		QueryPageMemberList(ctx context.Context, in *QueryPageMemberListReq, opts ...grpc.CallOption) (*QueryPageMemberListResp, error)
		// 查询关键字用户分页列表
		QueryKeywordPageMemberList(ctx context.Context, in *QueryKeywordPageMemberListReq, opts ...grpc.CallOption) (*QueryKeywordPageMemberListResp, error)
		// 查询用户所有列表
		QueryMemberList(ctx context.Context, in *QueryMemberListReq, opts ...grpc.CallOption) (*QueryMemberListResp, error)
		// 查询关键字用户列表
		QueryKeywordMemberList(ctx context.Context, in *QueryKeywordMemberListReq, opts ...grpc.CallOption) (*QueryKeywordMemberListResp, error)
	}

	defaultService struct {
		cli zrpc.Client
	}
)

func NewService(cli zrpc.Client) Service {
	return &defaultService{
		cli: cli,
	}
}

// 添加用户
func (m *defaultService) AddMember(ctx context.Context, in *AddMemberReq, opts ...grpc.CallOption) (*AddMemberResp, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.AddMember(ctx, in, opts...)
}

// 删除用户
func (m *defaultService) DeleteMember(ctx context.Context, in *DeleteMemberReq, opts ...grpc.CallOption) (*DeleteMemberResp, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.DeleteMember(ctx, in, opts...)
}

// 更新用户
func (m *defaultService) UpdateMember(ctx context.Context, in *UpdateMemberReq, opts ...grpc.CallOption) (*UpdateMemberResp, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.UpdateMember(ctx, in, opts...)
}

// 更新用户状态
func (m *defaultService) UpdateMemberStatus(ctx context.Context, in *UpdateMemberStatusReq, opts ...grpc.CallOption) (*UpdateMemberStatusResp, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.UpdateMemberStatus(ctx, in, opts...)
}

// 查询用户详情
func (m *defaultService) QueryMemberDetail(ctx context.Context, in *QueryMemberDetailReq, opts ...grpc.CallOption) (*QueryMemberDetailResp, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.QueryMemberDetail(ctx, in, opts...)
}

// 查询用户分页列表
func (m *defaultService) QueryPageMemberList(ctx context.Context, in *QueryPageMemberListReq, opts ...grpc.CallOption) (*QueryPageMemberListResp, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.QueryPageMemberList(ctx, in, opts...)
}

// 查询关键字用户分页列表
func (m *defaultService) QueryKeywordPageMemberList(ctx context.Context, in *QueryKeywordPageMemberListReq, opts ...grpc.CallOption) (*QueryKeywordPageMemberListResp, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.QueryKeywordPageMemberList(ctx, in, opts...)
}

// 查询用户所有列表
func (m *defaultService) QueryMemberList(ctx context.Context, in *QueryMemberListReq, opts ...grpc.CallOption) (*QueryMemberListResp, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.QueryMemberList(ctx, in, opts...)
}

// 查询关键字用户列表
func (m *defaultService) QueryKeywordMemberList(ctx context.Context, in *QueryKeywordMemberListReq, opts ...grpc.CallOption) (*QueryKeywordMemberListResp, error) {
	client := pb.NewServiceClient(m.cli.Conn())
	return client.QueryKeywordMemberList(ctx, in, opts...)
}
