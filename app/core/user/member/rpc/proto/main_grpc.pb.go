// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.19.4
// source: proto/rpc/main.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SysMemberService_AddSysMember_FullMethodName           = "/main.SysMemberService/AddSysMember"
	SysMemberService_DeleteSysMember_FullMethodName        = "/main.SysMemberService/DeleteSysMember"
	SysMemberService_UpdateSysMember_FullMethodName        = "/main.SysMemberService/UpdateSysMember"
	SysMemberService_UpdateSysMemberStatus_FullMethodName  = "/main.SysMemberService/UpdateSysMemberStatus"
	SysMemberService_QuerySysMemberDetail_FullMethodName   = "/main.SysMemberService/QuerySysMemberDetail"
	SysMemberService_QueryPageSysMemberList_FullMethodName = "/main.SysMemberService/QueryPageSysMemberList"
	SysMemberService_QuerySysMemberList_FullMethodName     = "/main.SysMemberService/QuerySysMemberList"
)

// SysMemberServiceClient is the client API for SysMemberService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// 用户
type SysMemberServiceClient interface {
	// 添加用户
	AddSysMember(ctx context.Context, in *AddSysMemberReq, opts ...grpc.CallOption) (*AddSysMemberResp, error)
	// 删除用户
	DeleteSysMember(ctx context.Context, in *DeleteSysMemberReq, opts ...grpc.CallOption) (*DeleteSysMemberResp, error)
	// 更新用户
	UpdateSysMember(ctx context.Context, in *UpdateSysMemberReq, opts ...grpc.CallOption) (*UpdateSysMemberResp, error)
	// 更新用户状态
	UpdateSysMemberStatus(ctx context.Context, in *UpdateSysMemberStatusReq, opts ...grpc.CallOption) (*UpdateSysMemberStatusResp, error)
	// 查询用户详情
	QuerySysMemberDetail(ctx context.Context, in *QuerySysMemberDetailReq, opts ...grpc.CallOption) (*QuerySysMemberDetailResp, error)
	// 查询用户分页列表
	QueryPageSysMemberList(ctx context.Context, in *QueryPageSysMemberListReq, opts ...grpc.CallOption) (*QueryPageSysMemberListResp, error)
	// 查询用户所有列表
	QuerySysMemberList(ctx context.Context, in *QuerySysMemberListReq, opts ...grpc.CallOption) (*QuerySysMemberListResp, error)
}

type sysMemberServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSysMemberServiceClient(cc grpc.ClientConnInterface) SysMemberServiceClient {
	return &sysMemberServiceClient{cc}
}

func (c *sysMemberServiceClient) AddSysMember(ctx context.Context, in *AddSysMemberReq, opts ...grpc.CallOption) (*AddSysMemberResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AddSysMemberResp)
	err := c.cc.Invoke(ctx, SysMemberService_AddSysMember_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysMemberServiceClient) DeleteSysMember(ctx context.Context, in *DeleteSysMemberReq, opts ...grpc.CallOption) (*DeleteSysMemberResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteSysMemberResp)
	err := c.cc.Invoke(ctx, SysMemberService_DeleteSysMember_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysMemberServiceClient) UpdateSysMember(ctx context.Context, in *UpdateSysMemberReq, opts ...grpc.CallOption) (*UpdateSysMemberResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateSysMemberResp)
	err := c.cc.Invoke(ctx, SysMemberService_UpdateSysMember_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysMemberServiceClient) UpdateSysMemberStatus(ctx context.Context, in *UpdateSysMemberStatusReq, opts ...grpc.CallOption) (*UpdateSysMemberStatusResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateSysMemberStatusResp)
	err := c.cc.Invoke(ctx, SysMemberService_UpdateSysMemberStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysMemberServiceClient) QuerySysMemberDetail(ctx context.Context, in *QuerySysMemberDetailReq, opts ...grpc.CallOption) (*QuerySysMemberDetailResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(QuerySysMemberDetailResp)
	err := c.cc.Invoke(ctx, SysMemberService_QuerySysMemberDetail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysMemberServiceClient) QueryPageSysMemberList(ctx context.Context, in *QueryPageSysMemberListReq, opts ...grpc.CallOption) (*QueryPageSysMemberListResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(QueryPageSysMemberListResp)
	err := c.cc.Invoke(ctx, SysMemberService_QueryPageSysMemberList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysMemberServiceClient) QuerySysMemberList(ctx context.Context, in *QuerySysMemberListReq, opts ...grpc.CallOption) (*QuerySysMemberListResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(QuerySysMemberListResp)
	err := c.cc.Invoke(ctx, SysMemberService_QuerySysMemberList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SysMemberServiceServer is the server API for SysMemberService service.
// All implementations must embed UnimplementedSysMemberServiceServer
// for forward compatibility.
//
// 用户
type SysMemberServiceServer interface {
	// 添加用户
	AddSysMember(context.Context, *AddSysMemberReq) (*AddSysMemberResp, error)
	// 删除用户
	DeleteSysMember(context.Context, *DeleteSysMemberReq) (*DeleteSysMemberResp, error)
	// 更新用户
	UpdateSysMember(context.Context, *UpdateSysMemberReq) (*UpdateSysMemberResp, error)
	// 更新用户状态
	UpdateSysMemberStatus(context.Context, *UpdateSysMemberStatusReq) (*UpdateSysMemberStatusResp, error)
	// 查询用户详情
	QuerySysMemberDetail(context.Context, *QuerySysMemberDetailReq) (*QuerySysMemberDetailResp, error)
	// 查询用户分页列表
	QueryPageSysMemberList(context.Context, *QueryPageSysMemberListReq) (*QueryPageSysMemberListResp, error)
	// 查询用户所有列表
	QuerySysMemberList(context.Context, *QuerySysMemberListReq) (*QuerySysMemberListResp, error)
	mustEmbedUnimplementedSysMemberServiceServer()
}

// UnimplementedSysMemberServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSysMemberServiceServer struct{}

func (UnimplementedSysMemberServiceServer) AddSysMember(context.Context, *AddSysMemberReq) (*AddSysMemberResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSysMember not implemented")
}
func (UnimplementedSysMemberServiceServer) DeleteSysMember(context.Context, *DeleteSysMemberReq) (*DeleteSysMemberResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSysMember not implemented")
}
func (UnimplementedSysMemberServiceServer) UpdateSysMember(context.Context, *UpdateSysMemberReq) (*UpdateSysMemberResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSysMember not implemented")
}
func (UnimplementedSysMemberServiceServer) UpdateSysMemberStatus(context.Context, *UpdateSysMemberStatusReq) (*UpdateSysMemberStatusResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSysMemberStatus not implemented")
}
func (UnimplementedSysMemberServiceServer) QuerySysMemberDetail(context.Context, *QuerySysMemberDetailReq) (*QuerySysMemberDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuerySysMemberDetail not implemented")
}
func (UnimplementedSysMemberServiceServer) QueryPageSysMemberList(context.Context, *QueryPageSysMemberListReq) (*QueryPageSysMemberListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryPageSysMemberList not implemented")
}
func (UnimplementedSysMemberServiceServer) QuerySysMemberList(context.Context, *QuerySysMemberListReq) (*QuerySysMemberListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuerySysMemberList not implemented")
}
func (UnimplementedSysMemberServiceServer) mustEmbedUnimplementedSysMemberServiceServer() {}
func (UnimplementedSysMemberServiceServer) testEmbeddedByValue()                          {}

// UnsafeSysMemberServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SysMemberServiceServer will
// result in compilation errors.
type UnsafeSysMemberServiceServer interface {
	mustEmbedUnimplementedSysMemberServiceServer()
}

func RegisterSysMemberServiceServer(s grpc.ServiceRegistrar, srv SysMemberServiceServer) {
	// If the following call pancis, it indicates UnimplementedSysMemberServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SysMemberService_ServiceDesc, srv)
}

func _SysMemberService_AddSysMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSysMemberReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysMemberServiceServer).AddSysMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysMemberService_AddSysMember_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysMemberServiceServer).AddSysMember(ctx, req.(*AddSysMemberReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysMemberService_DeleteSysMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSysMemberReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysMemberServiceServer).DeleteSysMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysMemberService_DeleteSysMember_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysMemberServiceServer).DeleteSysMember(ctx, req.(*DeleteSysMemberReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysMemberService_UpdateSysMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSysMemberReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysMemberServiceServer).UpdateSysMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysMemberService_UpdateSysMember_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysMemberServiceServer).UpdateSysMember(ctx, req.(*UpdateSysMemberReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysMemberService_UpdateSysMemberStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSysMemberStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysMemberServiceServer).UpdateSysMemberStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysMemberService_UpdateSysMemberStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysMemberServiceServer).UpdateSysMemberStatus(ctx, req.(*UpdateSysMemberStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysMemberService_QuerySysMemberDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuerySysMemberDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysMemberServiceServer).QuerySysMemberDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysMemberService_QuerySysMemberDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysMemberServiceServer).QuerySysMemberDetail(ctx, req.(*QuerySysMemberDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysMemberService_QueryPageSysMemberList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPageSysMemberListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysMemberServiceServer).QueryPageSysMemberList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysMemberService_QueryPageSysMemberList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysMemberServiceServer).QueryPageSysMemberList(ctx, req.(*QueryPageSysMemberListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysMemberService_QuerySysMemberList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuerySysMemberListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysMemberServiceServer).QuerySysMemberList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SysMemberService_QuerySysMemberList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysMemberServiceServer).QuerySysMemberList(ctx, req.(*QuerySysMemberListReq))
	}
	return interceptor(ctx, in, info, handler)
}

// SysMemberService_ServiceDesc is the grpc.ServiceDesc for SysMemberService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SysMemberService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "main.SysMemberService",
	HandlerType: (*SysMemberServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddSysMember",
			Handler:    _SysMemberService_AddSysMember_Handler,
		},
		{
			MethodName: "DeleteSysMember",
			Handler:    _SysMemberService_DeleteSysMember_Handler,
		},
		{
			MethodName: "UpdateSysMember",
			Handler:    _SysMemberService_UpdateSysMember_Handler,
		},
		{
			MethodName: "UpdateSysMemberStatus",
			Handler:    _SysMemberService_UpdateSysMemberStatus_Handler,
		},
		{
			MethodName: "QuerySysMemberDetail",
			Handler:    _SysMemberService_QuerySysMemberDetail_Handler,
		},
		{
			MethodName: "QueryPageSysMemberList",
			Handler:    _SysMemberService_QueryPageSysMemberList_Handler,
		},
		{
			MethodName: "QuerySysMemberList",
			Handler:    _SysMemberService_QuerySysMemberList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/rpc/main.proto",
}
