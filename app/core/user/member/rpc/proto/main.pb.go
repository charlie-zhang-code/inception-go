// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.19.4
// source: proto/rpc/main.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加用户
type AddSysMemberReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify    string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username    string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password    string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname    string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar      string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote       string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday    string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender      int64                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email       string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone   string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt     string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp     string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs     string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status      int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	// int64 deleted = 17; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	CreateAt      string `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` //记录创建的时间戳
	CreateBy      string `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"` //创建该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSysMemberReq) Reset() {
	*x = AddSysMemberReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSysMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysMemberReq) ProtoMessage() {}

func (x *AddSysMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysMemberReq.ProtoReflect.Descriptor instead.
func (*AddSysMemberReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{0}
}

func (x *AddSysMemberReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddSysMemberReq) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *AddSysMemberReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddSysMemberReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddSysMemberReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AddSysMemberReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AddSysMemberReq) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *AddSysMemberReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *AddSysMemberReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *AddSysMemberReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddSysMemberReq) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *AddSysMemberReq) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *AddSysMemberReq) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *AddSysMemberReq) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *AddSysMemberReq) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *AddSysMemberReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddSysMemberReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddSysMemberReq) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *AddSysMemberReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

type AddSysMemberResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSysMemberResp) Reset() {
	*x = AddSysMemberResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSysMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSysMemberResp) ProtoMessage() {}

func (x *AddSysMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSysMemberResp.ProtoReflect.Descriptor instead.
func (*AddSysMemberResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{1}
}

func (x *AddSysMemberResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddSysMemberResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 删除用户
type DeleteSysMemberReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int64                `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSysMemberReq) Reset() {
	*x = DeleteSysMemberReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSysMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysMemberReq) ProtoMessage() {}

func (x *DeleteSysMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysMemberReq.ProtoReflect.Descriptor instead.
func (*DeleteSysMemberReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteSysMemberReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteSysMemberResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSysMemberResp) Reset() {
	*x = DeleteSysMemberResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSysMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysMemberResp) ProtoMessage() {}

func (x *DeleteSysMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysMemberResp.ProtoReflect.Descriptor instead.
func (*DeleteSysMemberResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteSysMemberResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteSysMemberResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 更新用户
type UpdateSysMemberReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify    string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username    string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password    string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname    string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar      string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote       string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday    string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender      int64                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email       string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone   string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt     string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp     string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs     string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status      int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	// int64 deleted = 17; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	UpdateAt      string `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"` //记录最后更新的时间戳
	UpdateBy      string `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSysMemberReq) Reset() {
	*x = UpdateSysMemberReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSysMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysMemberReq) ProtoMessage() {}

func (x *UpdateSysMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysMemberReq.ProtoReflect.Descriptor instead.
func (*UpdateSysMemberReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSysMemberReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysMemberReq) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *UpdateSysMemberReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateSysMemberReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateSysMemberReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateSysMemberReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdateSysMemberReq) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *UpdateSysMemberReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UpdateSysMemberReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UpdateSysMemberReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateSysMemberReq) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *UpdateSysMemberReq) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *UpdateSysMemberReq) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *UpdateSysMemberReq) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *UpdateSysMemberReq) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *UpdateSysMemberReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateSysMemberReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateSysMemberReq) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *UpdateSysMemberReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type UpdateSysMemberResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSysMemberResp) Reset() {
	*x = UpdateSysMemberResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSysMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysMemberResp) ProtoMessage() {}

func (x *UpdateSysMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysMemberResp.ProtoReflect.Descriptor instead.
func (*UpdateSysMemberResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSysMemberResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateSysMemberResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 更新用户状态
type UpdateSysMemberStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"` //状态，0表示禁用，1表示正常启用
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSysMemberStatusReq) Reset() {
	*x = UpdateSysMemberStatusReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSysMemberStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysMemberStatusReq) ProtoMessage() {}

func (x *UpdateSysMemberStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysMemberStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateSysMemberStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSysMemberStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateSysMemberStatusResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSysMemberStatusResp) Reset() {
	*x = UpdateSysMemberStatusResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSysMemberStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysMemberStatusResp) ProtoMessage() {}

func (x *UpdateSysMemberStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysMemberStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateSysMemberStatusResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSysMemberStatusResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateSysMemberStatusResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 查询用户详情
type QuerySysMemberDetailReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySysMemberDetailReq) Reset() {
	*x = QuerySysMemberDetailReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySysMemberDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySysMemberDetailReq) ProtoMessage() {}

func (x *QuerySysMemberDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySysMemberDetailReq.ProtoReflect.Descriptor instead.
func (*QuerySysMemberDetailReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{8}
}

func (x *QuerySysMemberDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QuerySysMemberDetailResp struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Id       int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            //用户唯一标识符，主键
	Identify string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"` //用户的唯一标识符
	Username string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"` //用户登录时使用的用户名
	// string password = 4; //用户账户的密码，应存储加密后的值
	Nickname    string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar      string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote       string `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday    string `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender      int64  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email       string `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone   string `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt     string `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp     string `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion string `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs     string `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status      int64  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	// int64 deleted = 17; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	CreateAt      string `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` //记录创建的时间戳
	CreateBy      string `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"` //创建该记录的用户标识符
	UpdateAt      string `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"` //记录最后更新的时间戳
	UpdateBy      string `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySysMemberDetailResp) Reset() {
	*x = QuerySysMemberDetailResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySysMemberDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySysMemberDetailResp) ProtoMessage() {}

func (x *QuerySysMemberDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySysMemberDetailResp.ProtoReflect.Descriptor instead.
func (*QuerySysMemberDetailResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{9}
}

func (x *QuerySysMemberDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuerySysMemberDetailResp) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *QuerySysMemberDetailResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QuerySysMemberDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *QuerySysMemberDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

// 分页查询用户列表
type QueryPageSysMemberListReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify    string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username    string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password    string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname    string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar      string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote       string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday    string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender      int64                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email       string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone   string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt     string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp     string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs     string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status      int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	// int64 deleted = 17; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	PageNum       int64 `protobuf:"varint,18,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize      int64 `protobuf:"varint,19,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPageSysMemberListReq) Reset() {
	*x = QueryPageSysMemberListReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPageSysMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPageSysMemberListReq) ProtoMessage() {}

func (x *QueryPageSysMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPageSysMemberListReq.ProtoReflect.Descriptor instead.
func (*QueryPageSysMemberListReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{10}
}

func (x *QueryPageSysMemberListReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryPageSysMemberListReq) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *QueryPageSysMemberListReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *QueryPageSysMemberListReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryPageSysMemberListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryPageSysMemberListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PageSysMemberListData struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify    string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username    string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password    string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname    string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar      string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote       string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday    string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender      int64                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email       string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone   string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt     string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp     string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs     string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status      int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	// int64 deleted = 17; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	CreateAt      string `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` //记录创建的时间戳
	CreateBy      string `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"` //创建该记录的用户标识符
	UpdateAt      string `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"` //记录最后更新的时间戳
	UpdateBy      string `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageSysMemberListData) Reset() {
	*x = PageSysMemberListData{}
	mi := &file_proto_rpc_main_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageSysMemberListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSysMemberListData) ProtoMessage() {}

func (x *PageSysMemberListData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSysMemberListData.ProtoReflect.Descriptor instead.
func (*PageSysMemberListData) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{11}
}

func (x *PageSysMemberListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PageSysMemberListData) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *PageSysMemberListData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PageSysMemberListData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PageSysMemberListData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PageSysMemberListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PageSysMemberListData) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *PageSysMemberListData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *PageSysMemberListData) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *PageSysMemberListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PageSysMemberListData) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *PageSysMemberListData) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *PageSysMemberListData) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *PageSysMemberListData) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *PageSysMemberListData) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *PageSysMemberListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PageSysMemberListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PageSysMemberListData) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *PageSysMemberListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *PageSysMemberListData) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *PageSysMemberListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type QueryPageSysMemberListResp struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Total         int64                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List          []*PageSysMemberListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPageSysMemberListResp) Reset() {
	*x = QueryPageSysMemberListResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPageSysMemberListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPageSysMemberListResp) ProtoMessage() {}

func (x *QueryPageSysMemberListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPageSysMemberListResp.ProtoReflect.Descriptor instead.
func (*QueryPageSysMemberListResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{12}
}

func (x *QueryPageSysMemberListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryPageSysMemberListResp) GetList() []*PageSysMemberListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 查询用户列表
type QuerySysMemberListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify      string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname      string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar        string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote         string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday      string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender        int64                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email         string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone     string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt       string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp       string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion   string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs       string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status        int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySysMemberListReq) Reset() {
	*x = QuerySysMemberListReq{}
	mi := &file_proto_rpc_main_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySysMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySysMemberListReq) ProtoMessage() {}

func (x *QuerySysMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySysMemberListReq.ProtoReflect.Descriptor instead.
func (*QuerySysMemberListReq) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{13}
}

func (x *QuerySysMemberListReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuerySysMemberListReq) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *QuerySysMemberListReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QuerySysMemberListReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *QuerySysMemberListReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QuerySysMemberListReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QuerySysMemberListReq) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *QuerySysMemberListReq) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *QuerySysMemberListReq) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *QuerySysMemberListReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QuerySysMemberListReq) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *QuerySysMemberListReq) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *QuerySysMemberListReq) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *QuerySysMemberListReq) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *QuerySysMemberListReq) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *QuerySysMemberListReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SysMemberListData struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      //用户唯一标识符，主键
	Identify    string                 `protobuf:"bytes,2,opt,name=identify,proto3" json:"identify,omitempty"`                           //用户的唯一标识符
	Username    string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                           //用户登录时使用的用户名
	Password    string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                           //用户账户的密码，应存储加密后的值
	Nickname    string                 `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                           //用户在系统中显示的名字，可选
	Avatar      string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                               //用户头像的URL或路径
	Quote       string                 `protobuf:"bytes,7,opt,name=quote,proto3" json:"quote,omitempty"`                                 //用户设置的个人座右铭或签名
	Birthday    string                 `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`                           //用户的出生日期，用于个性化服务或统计
	Gender      int64                  `protobuf:"varint,9,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户的性别，0表示保密，1表示男性，2表示女性
	Email       string                 `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`                                //用户的电子邮件地址，可用于找回密码或接收通知
	Telephone   string                 `protobuf:"bytes,11,opt,name=telephone,proto3" json:"telephone,omitempty"`                        //用户的联系电话，可用于身份验证或联系用户
	LoginAt     string                 `protobuf:"bytes,12,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`             //用户最近一次登录的时间戳
	LoginIp     string                 `protobuf:"bytes,13,opt,name=login_ip,json=loginIp,proto3" json:"login_ip,omitempty"`             //用户最近一次登录的IP地址
	LoginRegion string                 `protobuf:"bytes,14,opt,name=login_region,json=loginRegion,proto3" json:"login_region,omitempty"` //用户最近一次登录的IP地址所属的地理位置
	LoginOs     string                 `protobuf:"bytes,15,opt,name=login_os,json=loginOs,proto3" json:"login_os,omitempty"`             //用户最近一次登录的操作系统
	Status      int64                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                             //状态，0表示禁用，1表示正常启用
	// int64 deleted = 17; //逻辑删除标志，0表示未删除，1表示已删除，允许数据恢复
	Remark        string `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`                     //对记录的备注信息，如特殊说明等
	CreateAt      string `protobuf:"bytes,19,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` //记录创建的时间戳
	CreateBy      string `protobuf:"bytes,20,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"` //创建该记录的用户标识符
	UpdateAt      string `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"` //记录最后更新的时间戳
	UpdateBy      string `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //最后更新该记录的用户标识符
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SysMemberListData) Reset() {
	*x = SysMemberListData{}
	mi := &file_proto_rpc_main_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SysMemberListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMemberListData) ProtoMessage() {}

func (x *SysMemberListData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMemberListData.ProtoReflect.Descriptor instead.
func (*SysMemberListData) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{14}
}

func (x *SysMemberListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysMemberListData) GetIdentify() string {
	if x != nil {
		return x.Identify
	}
	return ""
}

func (x *SysMemberListData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysMemberListData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SysMemberListData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SysMemberListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysMemberListData) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *SysMemberListData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *SysMemberListData) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SysMemberListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysMemberListData) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *SysMemberListData) GetLoginAt() string {
	if x != nil {
		return x.LoginAt
	}
	return ""
}

func (x *SysMemberListData) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *SysMemberListData) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *SysMemberListData) GetLoginOs() string {
	if x != nil {
		return x.LoginOs
	}
	return ""
}

func (x *SysMemberListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysMemberListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysMemberListData) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *SysMemberListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *SysMemberListData) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *SysMemberListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

type QuerySysMemberListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*SysMemberListData   `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerySysMemberListResp) Reset() {
	*x = QuerySysMemberListResp{}
	mi := &file_proto_rpc_main_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySysMemberListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySysMemberListResp) ProtoMessage() {}

func (x *QuerySysMemberListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_main_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySysMemberListResp.ProtoReflect.Descriptor instead.
func (*QuerySysMemberListResp) Descriptor() ([]byte, []int) {
	return file_proto_rpc_main_proto_rawDescGZIP(), []int{15}
}

func (x *QuerySysMemberListResp) GetList() []*SysMemberListData {
	if x != nil {
		return x.List
	}
	return nil
}

var File_proto_rpc_main_proto protoreflect.FileDescriptor

var file_proto_rpc_main_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x85, 0x04, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x22, 0x40, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x26, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x43,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x88, 0x04, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x4f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x43,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x32, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xac, 0x04,
	0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0xf5, 0x03, 0x0a,
	0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x4f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0xc5, 0x04, 0x0a, 0x15, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x63, 0x0a, 0x1a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xb9, 0x03, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x4f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc1, 0x04,
	0x0a, 0x11, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x22, 0x45, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xce, 0x04, 0x0a, 0x10, 0x53, 0x79, 0x73,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x57,
	0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_rpc_main_proto_rawDescOnce sync.Once
	file_proto_rpc_main_proto_rawDescData = file_proto_rpc_main_proto_rawDesc
)

func file_proto_rpc_main_proto_rawDescGZIP() []byte {
	file_proto_rpc_main_proto_rawDescOnce.Do(func() {
		file_proto_rpc_main_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_rpc_main_proto_rawDescData)
	})
	return file_proto_rpc_main_proto_rawDescData
}

var file_proto_rpc_main_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_rpc_main_proto_goTypes = []any{
	(*AddSysMemberReq)(nil),            // 0: main.AddSysMemberReq
	(*AddSysMemberResp)(nil),           // 1: main.AddSysMemberResp
	(*DeleteSysMemberReq)(nil),         // 2: main.DeleteSysMemberReq
	(*DeleteSysMemberResp)(nil),        // 3: main.DeleteSysMemberResp
	(*UpdateSysMemberReq)(nil),         // 4: main.UpdateSysMemberReq
	(*UpdateSysMemberResp)(nil),        // 5: main.UpdateSysMemberResp
	(*UpdateSysMemberStatusReq)(nil),   // 6: main.UpdateSysMemberStatusReq
	(*UpdateSysMemberStatusResp)(nil),  // 7: main.UpdateSysMemberStatusResp
	(*QuerySysMemberDetailReq)(nil),    // 8: main.QuerySysMemberDetailReq
	(*QuerySysMemberDetailResp)(nil),   // 9: main.QuerySysMemberDetailResp
	(*QueryPageSysMemberListReq)(nil),  // 10: main.QueryPageSysMemberListReq
	(*PageSysMemberListData)(nil),      // 11: main.PageSysMemberListData
	(*QueryPageSysMemberListResp)(nil), // 12: main.QueryPageSysMemberListResp
	(*QuerySysMemberListReq)(nil),      // 13: main.QuerySysMemberListReq
	(*SysMemberListData)(nil),          // 14: main.SysMemberListData
	(*QuerySysMemberListResp)(nil),     // 15: main.QuerySysMemberListResp
}
var file_proto_rpc_main_proto_depIdxs = []int32{
	11, // 0: main.QueryPageSysMemberListResp.list:type_name -> main.PageSysMemberListData
	14, // 1: main.QuerySysMemberListResp.list:type_name -> main.SysMemberListData
	0,  // 2: main.SysMemberService.AddSysMember:input_type -> main.AddSysMemberReq
	2,  // 3: main.SysMemberService.DeleteSysMember:input_type -> main.DeleteSysMemberReq
	4,  // 4: main.SysMemberService.UpdateSysMember:input_type -> main.UpdateSysMemberReq
	6,  // 5: main.SysMemberService.UpdateSysMemberStatus:input_type -> main.UpdateSysMemberStatusReq
	8,  // 6: main.SysMemberService.QuerySysMemberDetail:input_type -> main.QuerySysMemberDetailReq
	10, // 7: main.SysMemberService.QueryPageSysMemberList:input_type -> main.QueryPageSysMemberListReq
	13, // 8: main.SysMemberService.QuerySysMemberList:input_type -> main.QuerySysMemberListReq
	1,  // 9: main.SysMemberService.AddSysMember:output_type -> main.AddSysMemberResp
	3,  // 10: main.SysMemberService.DeleteSysMember:output_type -> main.DeleteSysMemberResp
	5,  // 11: main.SysMemberService.UpdateSysMember:output_type -> main.UpdateSysMemberResp
	7,  // 12: main.SysMemberService.UpdateSysMemberStatus:output_type -> main.UpdateSysMemberStatusResp
	9,  // 13: main.SysMemberService.QuerySysMemberDetail:output_type -> main.QuerySysMemberDetailResp
	12, // 14: main.SysMemberService.QueryPageSysMemberList:output_type -> main.QueryPageSysMemberListResp
	15, // 15: main.SysMemberService.QuerySysMemberList:output_type -> main.QuerySysMemberListResp
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_proto_rpc_main_proto_init() }
func file_proto_rpc_main_proto_init() {
	if File_proto_rpc_main_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_rpc_main_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_rpc_main_proto_goTypes,
		DependencyIndexes: file_proto_rpc_main_proto_depIdxs,
		MessageInfos:      file_proto_rpc_main_proto_msgTypes,
	}.Build()
	File_proto_rpc_main_proto = out.File
	file_proto_rpc_main_proto_rawDesc = nil
	file_proto_rpc_main_proto_goTypes = nil
	file_proto_rpc_main_proto_depIdxs = nil
}
