// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: main.proto

package server

import (
	"context"

	"member/rpc/internal/logic/service"
	"member/rpc/internal/svc"
	"member/rpc/pb"
)

type ServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedServiceServer
}

func NewServiceServer(svcCtx *svc.ServiceContext) *ServiceServer {
	return &ServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加用户
func (s *ServiceServer) AddSysUser(ctx context.Context, in *pb.AddSysUserReq) (*pb.AddSysUserResp, error) {
	l := servicelogic.NewAddSysUserLogic(ctx, s.svcCtx)
	return l.AddSysUser(in)
}

// 删除用户
func (s *ServiceServer) DeleteSysUser(ctx context.Context, in *pb.DeleteSysUserReq) (*pb.DeleteSysUserResp, error) {
	l := servicelogic.NewDeleteSysUserLogic(ctx, s.svcCtx)
	return l.DeleteSysUser(in)
}

// 更新用户
func (s *ServiceServer) UpdateSysUser(ctx context.Context, in *pb.UpdateSysUserReq) (*pb.UpdateSysUserResp, error) {
	l := servicelogic.NewUpdateSysUserLogic(ctx, s.svcCtx)
	return l.UpdateSysUser(in)
}

// 更新用户状态
func (s *ServiceServer) UpdateSysUserStatus(ctx context.Context, in *pb.UpdateSysUserStatusReq) (*pb.UpdateSysUserStatusResp, error) {
	l := servicelogic.NewUpdateSysUserStatusLogic(ctx, s.svcCtx)
	return l.UpdateSysUserStatus(in)
}

// 查询用户详情
func (s *ServiceServer) QuerySysUserDetail(ctx context.Context, in *pb.QuerySysUserDetailReq) (*pb.QuerySysUserDetailResp, error) {
	l := servicelogic.NewQuerySysUserDetailLogic(ctx, s.svcCtx)
	return l.QuerySysUserDetail(in)
}

// 查询用户分页列表
func (s *ServiceServer) QueryPageSysUserList(ctx context.Context, in *pb.QueryPageSysUserListReq) (*pb.QueryPageSysUserListResp, error) {
	l := servicelogic.NewQueryPageSysUserListLogic(ctx, s.svcCtx)
	return l.QueryPageSysUserList(in)
}

// 查询用户所有列表
func (s *ServiceServer) QuerySysUserList(ctx context.Context, in *pb.QuerySysUserListReq) (*pb.QuerySysUserListResp, error) {
	l := servicelogic.NewQuerySysUserListLogic(ctx, s.svcCtx)
	return l.QuerySysUserList(in)
}
