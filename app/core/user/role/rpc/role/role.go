// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: role.proto

package role

import (
	"context"

	"role/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddRoleReq                   = pb.AddRoleReq
	AddRoleResp                  = pb.AddRoleResp
	DeleteRoleReq                = pb.DeleteRoleReq
	DeleteRoleResp               = pb.DeleteRoleResp
	PageRoleListData             = pb.PageRoleListData
	QueryKeywordPageRoleListReq  = pb.QueryKeywordPageRoleListReq
	QueryKeywordPageRoleListResp = pb.QueryKeywordPageRoleListResp
	QueryPageRoleListReq         = pb.QueryPageRoleListReq
	QueryPageRoleListResp        = pb.QueryPageRoleListResp
	QueryRoleDetailReq           = pb.QueryRoleDetailReq
	QueryRoleDetailResp          = pb.QueryRoleDetailResp
	UpdateRoleReq                = pb.UpdateRoleReq
	UpdateRoleResp               = pb.UpdateRoleResp
	UpdateRoleStatusReq          = pb.UpdateRoleStatusReq
	UpdateRoleStatusResp         = pb.UpdateRoleStatusResp

	Role interface {
		// 添加角色
		AddRole(ctx context.Context, in *AddRoleReq, opts ...grpc.CallOption) (*AddRoleResp, error)
		// 删除角色
		DeleteRole(ctx context.Context, in *DeleteRoleReq, opts ...grpc.CallOption) (*DeleteRoleResp, error)
		// 更新角色
		UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*UpdateRoleResp, error)
		// 更新角色状态
		UpdateRoleStatus(ctx context.Context, in *UpdateRoleStatusReq, opts ...grpc.CallOption) (*UpdateRoleStatusResp, error)
		// 查询角色详情
		QueryRoleDetail(ctx context.Context, in *QueryRoleDetailReq, opts ...grpc.CallOption) (*QueryRoleDetailResp, error)
		// 查询角色分页列表
		QueryPageRoleList(ctx context.Context, in *QueryPageRoleListReq, opts ...grpc.CallOption) (*QueryPageRoleListResp, error)
		// 查询关键字角色分页列表
		QueryKeywordPageRoleList(ctx context.Context, in *QueryKeywordPageRoleListReq, opts ...grpc.CallOption) (*QueryKeywordPageRoleListResp, error)
	}

	defaultRole struct {
		cli zrpc.Client
	}
)

func NewRole(cli zrpc.Client) Role {
	return &defaultRole{
		cli: cli,
	}
}

// 添加角色
func (m *defaultRole) AddRole(ctx context.Context, in *AddRoleReq, opts ...grpc.CallOption) (*AddRoleResp, error) {
	client := pb.NewRoleClient(m.cli.Conn())
	return client.AddRole(ctx, in, opts...)
}

// 删除角色
func (m *defaultRole) DeleteRole(ctx context.Context, in *DeleteRoleReq, opts ...grpc.CallOption) (*DeleteRoleResp, error) {
	client := pb.NewRoleClient(m.cli.Conn())
	return client.DeleteRole(ctx, in, opts...)
}

// 更新角色
func (m *defaultRole) UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*UpdateRoleResp, error) {
	client := pb.NewRoleClient(m.cli.Conn())
	return client.UpdateRole(ctx, in, opts...)
}

// 更新角色状态
func (m *defaultRole) UpdateRoleStatus(ctx context.Context, in *UpdateRoleStatusReq, opts ...grpc.CallOption) (*UpdateRoleStatusResp, error) {
	client := pb.NewRoleClient(m.cli.Conn())
	return client.UpdateRoleStatus(ctx, in, opts...)
}

// 查询角色详情
func (m *defaultRole) QueryRoleDetail(ctx context.Context, in *QueryRoleDetailReq, opts ...grpc.CallOption) (*QueryRoleDetailResp, error) {
	client := pb.NewRoleClient(m.cli.Conn())
	return client.QueryRoleDetail(ctx, in, opts...)
}

// 查询角色分页列表
func (m *defaultRole) QueryPageRoleList(ctx context.Context, in *QueryPageRoleListReq, opts ...grpc.CallOption) (*QueryPageRoleListResp, error) {
	client := pb.NewRoleClient(m.cli.Conn())
	return client.QueryPageRoleList(ctx, in, opts...)
}

// 查询关键字角色分页列表
func (m *defaultRole) QueryKeywordPageRoleList(ctx context.Context, in *QueryKeywordPageRoleListReq, opts ...grpc.CallOption) (*QueryKeywordPageRoleListResp, error) {
	client := pb.NewRoleClient(m.cli.Conn())
	return client.QueryKeywordPageRoleList(ctx, in, opts...)
}
